---
name: testing yaml linting

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  ACTIONS_STEP_DEBUG: true 
  
jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install yamllint
          pip install pyyaml
          pip install ruamel.yaml

      - name: Automate Lint YAML files
        id: lint_yaml
        run: |
          yamllint -c .yamllint .
        continue-on-error: true

      - name: Set linting success
        if: steps.lint_yaml.outcome == 'success'
        run: echo "::set-output name=lint_success::true"

      - name: Fix YAML files
        if: steps.lint_yaml.outcome == 'failure' || steps.set-lint-success.outputs.lint_success == 'true'
        run: |
          chmod +x yamllint-fix.sh
          ./yamllint-fix.sh

      - name: Commit and push changes
        if: steps.lint_yaml.outcome == 'failure' || steps.set-lint-success.outputs.lint_success == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            git checkout ${{ github.head_ref }}
          else
            git checkout ${{ github.ref }}
          fi
          git add .
          git commit -m "automate yaml lint errors-auto commit"
#          git push origin ${{ github.head_ref }}
      - name: Push Changes
        uses: actions/checkout@v4
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
